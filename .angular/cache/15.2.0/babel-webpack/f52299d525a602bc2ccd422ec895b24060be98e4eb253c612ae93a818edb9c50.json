{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  title(title) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employeeService.getEmployees().subscribe(response => {\n      this.employees = response;\n      console.log(this.employees);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onAddEmloyee(addForm) {\n    document.getElementById('add-employee-form').click();\n    this.employeeService.addEmployee(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n      addForm.reset();\n    }, error => {\n      alert(error.message);\n      addForm.reset();\n    });\n  }\n  onUpdateEmloyee(employee) {\n    this.employeeService.updateEmployee(employee).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onDeleteEmloyee(employeeId) {\n    this.employeeService.deleteEmployee(employeeId).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  searchEmployees(key) {\n    console.log(key);\n    const results = [];\n    for (const employee of this.employees) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.jobTitle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n  onOpenModal(employee, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editEmployee = employee;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteEmployee = employee;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}