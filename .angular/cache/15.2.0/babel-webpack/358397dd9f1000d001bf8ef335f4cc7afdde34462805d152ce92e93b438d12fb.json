{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employeeService.getEmployees().subscribe(response => {\n      this.employees = response;\n      console.log(this.employees);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onAddEmployee(addForm) {\n    var _a;\n    (_a = document.getElementById('add-employee-form')) === null || _a === void 0 ? void 0 : _a.click();\n    this.employeeService.addEmployee(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n      addForm.reset();\n    }, error => {\n      alert(error.message);\n      addForm.reset();\n    });\n  }\n  onUpdateEmployee(employee) {\n    this.employeeService.updateEmployee(employee).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onDeleteEmployee(employeeId) {\n    this.employeeService.deleteEmployee(employeeId).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  searchEmployees(key) {\n    console.log(key);\n    const results = [];\n    for (const employee of this.employees) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.jobTittle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n  onOpenModal(employee, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      if (employee) {\n        this.editEmployee = employee;\n      }\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container === null || container === void 0 ? void 0 : container.appendChild(button);\n    button.click();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","employeeService","ngOnInit","getEmployees","subscribe","response","employees","console","log","error","alert","message","onAddEmployee","addForm","getElementById","click","addEmployee","value","reset","onUpdateEmployee","employee","updateEmployee","onDeleteEmployee","employeeId","deleteEmployee","searchEmployees","key","results","name","toLowerCase","indexOf","email","phone","jobTittle","push","length","onOpenModal","mode","container","document","button","createElement","type","style","display","setAttribute","editEmployee","appendChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Windows\\System32\\employeemanagerapp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from './employee';\nimport { EmployeeService } from './employee.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  public employees;\n  public editEmployee;\n  public deleteEmployee;\n  constructor(private employeeService: EmployeeService){}\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n\n  public getEmployees(): void {\n    this.employeeService.getEmployees().subscribe(\n      (response: Employee[]) => {\n        this.employees = response;\n        console.log(this.employees);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onAddEmployee(addForm: NgForm): void {\n    document.getElementById('add-employee-form')?.click();\n    this.employeeService.addEmployee(addForm.value).subscribe(\n      (response: Employee) => {\n        console.log(response);\n        this.getEmployees();\n        addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n        addForm.reset();\n      }\n    );\n  }\n\n  public onUpdateEmployee(employee: Employee): void {\n    this.employeeService.updateEmployee(employee).subscribe(\n      (response: Employee) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onDeleteEmployee(employeeId: number): void {\n    this.employeeService.deleteEmployee(employeeId).subscribe(\n      (response: void) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public searchEmployees(key: string): void {\n    console.log(key);\n    const results: Employee[] = [];\n    for (const employee of this.employees!) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.jobTittle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n\n  public onOpenModal(employee: Employee | null, mode: String): void {\n    const container = document.getElementById('main-container');\n    const button =document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle','modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target','#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      if (employee) {\n        this.editEmployee = employee;\n      }\n      button.setAttribute('data-target','#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      button.setAttribute('data-target','#deleteEmployeeModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}